- name: install postgresql
  action: yum state=present pkg={{ item }}
  with_items:
  - "postgresql-server"
  - "postgresql-contrib"

- name: See if postgreSQL is installed
  stat: path=/var/lib/pgsql/initdb.log
  register: pgsql_installed

- name: init postgresql
  shell: "postgresql-setup initdb"
  when: not pgsql_installed.stat.exists

- name: disable OOM
  lineinfile: dest=/lib/systemd/system/postgresql.service regexp="^OOMScoreAdjust" line="#OOMScoreAdjust=-1000"
#sed -i '/OOMScoreAdjust/s/^/#/' /lib/systemd/system/postgresql.service

- name: copy pg_hba.conf
  copy: src="pg/pg_hba.conf" dest=/var/lib/pgsql/data/pg_hba.conf owner=postgres group=postgres mode=0600
  notify:
  - restart postgresql
  tags:
  - config

- name: enable postgresql services
  service: state=running enabled=yes name=postgresql

# TODO: I think we missing user creation, check it we do it somewhere else ...
- name: create postgresql database
  remote_user: root
  su: true
  su_user: postgres
  postgresql_db: name=coprdb state=present encoding=utf-8

- name: create postgresql adminuser
  remote_user: root
  su: true
  su_user: postgres
  postgresql_user: name=copr-fe state=present password='coprpass' role_attr_flags="SUPERUSER,NOCREATEDB,NOCREATEROLE"
# password='str["md5"] + md5[ coprpass + copr-fe ]'
# shell: su - postgres -c 'PGPASSWORD=coprpass;createdb -E UTF8 coprdb;yes $PGPASSWORD|createuser -P -sDR copr-fe'  # -P password; -s adminuser; -D no create db; -R no create role
# connection: PGPASSWORD=coprpass psql -a -h localhost -U copr-fe coprdb

- name: Ensure postgres has a place to backup to
  file: dest=/var/lib/pgsql/backups state=directory owner=postgres
  tags:
  - config

- name: Copy over backup scriplet
  copy: src="pg/backup-database" dest=/usr/local/bin/backup-database mode=0755
  tags:
  - config

- name: Copy clean task scriplet
  copy: src="pg/clean-task" dest=/usr/local/bin/clean-task mode=0755
  tags:
  - config

#- name: Set up some cronjobs to backup databases as configured
#  template: src="cron-backup-database" dest="/etc/cron.d/cron-backup-database-{{ item }}"
#  with_items:
#  - "{{ dbs_to_backup }}"
#  when: dbs_to_backup != []
#  tags:
#  - config
