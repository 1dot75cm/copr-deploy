---
- name: check/create instance
  hosts: localhost
  user: copr
  gather_facts: False
  vars:
  - Build_ip: {{ builder_ip }}
  - Web_ip: {{ web_ip }}
  - Web_port: {{ web_port }}

{% raw %}
  tasks:
  - name: generate builder name
    local_action: command echo "Copr_builder_{{ 999999999 | random }}"
    register: vm_name

# create, build, delete
  - name: create builder container
    shell: ssh root@{{Build_ip}} "docker run -d --name {{ vm_name.stdout }} -v /sys/fs/cgroup:/sys/fs/cgroup:ro -m 1864m --memory-swap=2376m --cap-add=net_broadcast --cap-add=net_admin --cap-add=sys_admin systemd:unpriv"

  - name: builder ip address
    shell: ssh root@{{Build_ip}} "docker exec {{ vm_name.stdout }} ifconfig" | awk '/inet /{print $2;exit}'
    register: vm_ip

  - name: web route
    shell: ssh copr@{{Web_ip}} -p {{Web_port}} "sudo route add -host {{ vm_ip.stdout }} gw {{ Build_ip }}"

  - name: container route
    shell: ssh root@{{Build_ip}} "docker exec {{ vm_name.stdout }} route add -host {{ Web_ip }} gw {{ Build_ip }}"

  - debug: msg="IP={{ vm_ip.stdout }}"

  - debug: msg="vm_name={{ vm_name.stdout }}"

  - name: add it to the special group
    local_action: add_host hostname={{ vm_ip.stdout }} groupname=builder_temp_group

  - name: wait for the host to be hot
    local_action: wait_for host={{ vm_ip.stdout }} port=22 delay=5 timeout=600

- hosts: builder_temp_group
  user: root
  gather_facts: False
  vars:
   - files: files/

  tasks:
#  - name: edit hostname to be instance name
#    action: shell hostname 'builder.fdzh.org'

  - name: install pkgs
    action: yum state=present pkg={{ item }}
    with_items:
    - rsync
    - openssh-clients
    - libselinux-python
    - libsemanage-python

  - name: add repos
    action: copy src={{ files }}/{{ item }} dest=/etc/yum.repos.d/{{ item }}
    with_items:
    - builder.repo
#    - epel6.repo

  - name: install additional pkgs
    action: yum state=present pkg={{ item }}
    with_items:
    - mock
    - createrepo
    - yum-utils
    - pyliblzma

  - name: make sure newest rpm
    action: yum name={{ item }} state=latest
    with_items:
    - rpm
    - glib2
    - ca-certificates

#  - yum: name=mock  enablerepo=epel-testing state=latest

  - name: mockbuilder user
    action: user name=mockbuilder groups=mock

  - name: mockbuilder .ssh
    action: file state=directory path=/home/mockbuilder/.ssh mode=0700 owner=mockbuilder group=mockbuilder

  - name: mockbuilder authorized_keys
    action: authorized_key user=mockbuilder key='{{ lookup('file', '/home/copr/provision/files/buildsys.pub') }}'

  - name: put updated mock configs into /etc/mock
    action: copy src={{ files }}/mock/{{ item }} dest=/etc/mock
    with_items:
    - site-defaults.cfg

  - lineinfile: dest=/etc/mock/fedora-rawhide-x86_64.cfg line="config_opts['package_manager'] = 'dnf'" state=absent
  - lineinfile: dest=/etc/mock/fedora-rawhide-i386.cfg line="config_opts['package_manager'] = 'dnf'" state=absent

  - lineinfile: dest=/etc/mock/{{ item }}.cfg insertafter="^config_opts\[\'releasever\'\]" line="config_opts['package_manager'] = 'dnf'"
    with_items:
    - fedora-20-x86_64
    - fedora-20-i386
    - epel-6-x86_64
    - epel-6-i386
    - epel-5-x86_64
    - epel-5-i386

# ulimit -n 10240
  - lineinfile: dest=/etc/security/limits.conf line="* soft nofile 10240" insertafter=EOF
  - lineinfile: dest=/etc/security/limits.conf line="* hard nofile 10240" insertafter=EOF
{% endraw %}
